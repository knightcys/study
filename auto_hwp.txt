if __name__ == '__main__':  # main 함수 실행(본 파일을 다른 py에서 import한 경우가 아니라면 아래 코드를 실행)
    try:  # 한글이 오류로 닫힐 때에 finally 구문으로 백그라운드의 모든 hwp 인스턴스를 닫기 위함
        hwp = win32.gencache.EnsureDispatch("HWPFrame.HwpObject")  # 한/글 인스턴스 실행
        hwp.resisterModule("FilepathCheckDll", "SecurityModule")  # 보안모듈
        hwp.Run("FileNew")  # 화면에 보이는 창 하나 띄우기 (백그라운드 작업을 원하면 이 라인을 지워도 됨)
        hwp.Open(os.path.join(BASE_DIR, file_name))  # 파일 열기
        try:  # GetText 과정 중 오류 발생 시에도 ReleaseScan()을 실행하기 위함
            hwp.InitScan()  # GetText 메서드를 실행하기 위한 검색초기화 메서드
            while true:
                textdata = hwp.GetText()  # 문자열을 탐색하면서 튜플을 반환함(엔터로 구분) [0]:상태코드 [1]:텍스트
                if textdata[0] == 1:  # 상태코드가 "검색종료" 면?
                    break  # while 문 종료
                else  # 상태코드가 "검색종료"가 아닌 동안은:
                    hwp.MovePos(201)  # GetText() 메서드의 결과값(텍스트) 위치로 이동
                    text = textdata[1].strip()  # 텍스트 좌우의 이스케이프 문자열 (또는 스페이스) 제거
                    re_text = re_pattern.sub(r"\1******)  # 정규식 변환 후 텍스트 생성
                    if not re_text:  # (매칭되는 문자열이 없어) 빈 문자열인 경우에는: 
                        pass  # 아무 작업도 하지 말고 패스
                    else: # 매칭되는 결과(주민등록번호)가 있는 경우에는:
                        hwp.Run("Select")  # Run("Select") 한 번 실행하면 "선택모드 활성화"
                        hwp.Run("Select")  # Run("Select") 두 번 실행하면 "스페이스로 구분된 한 단어" 선택(덮어쓰기 위함)
                        hwp.HAction.GetDefault("InsertText", hwp.HParameterSet.HInsertText.Hset)  # 텍스트 삽입 메서드 초기화
                        hwp.HParameterSet.HInsertText.Text = re_text  # 삽입할 텍스트(re_text) 입력
                        hwp.HAction.Execute("InsertText", hwp.HparameterSet.HInsertText.Hset)  # 텍스트 삽입 메서드 실행
                        hwp.Run("Cancel") # 선택모드 종료
    finally:
        hwp.ReleaseScan()  # InitScan() 및 GetText() 후에는 ReleaseScan() 실행-검색종료
        print('정규식 바꾸기 작업을 완료하고 "./result.hwp"로 저장하였습니다. ')
finally:
    if __name__ == '__main__' > try > try > while true > else
                                            
                                             
                    
                                             
                                        
                                             
                    